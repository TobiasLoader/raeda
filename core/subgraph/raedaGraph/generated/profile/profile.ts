// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class profileEvent extends ethereum.Event {
  get params(): profileEvent__Params {
    return new profileEvent__Params(this);
  }
}

export class profileEvent__Params {
  _event: profileEvent;

  constructor(event: profileEvent) {
    this._event = event;
  }

  get _userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _waterType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get _userName(): string {
    return this._event.parameters[2].value.toString();
  }

  get _summary(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class profile__profilesResult {
  value0: i32;
  value1: string;
  value2: string;

  constructor(value0: i32, value1: string, value2: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    return map;
  }

  getWaterType(): i32 {
    return this.value0;
  }

  getUserName(): string {
    return this.value1;
  }

  getSummary(): string {
    return this.value2;
  }
}

export class profile extends ethereum.SmartContract {
  static bind(address: Address): profile {
    return new profile("profile", address);
  }

  profiles(param0: BigInt): profile__profilesResult {
    let result = super.call(
      "profiles",
      "profiles(uint32):(uint8,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new profile__profilesResult(
      result[0].toI32(),
      result[1].toString(),
      result[2].toString()
    );
  }

  try_profiles(param0: BigInt): ethereum.CallResult<profile__profilesResult> {
    let result = super.tryCall(
      "profiles",
      "profiles(uint32):(uint8,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new profile__profilesResult(
        value[0].toI32(),
        value[1].toString(),
        value[2].toString()
      )
    );
  }

  checkEOA(_userId: BigInt, _EOA: Address): boolean {
    let result = super.call("checkEOA", "checkEOA(uint32,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_userId),
      ethereum.Value.fromAddress(_EOA)
    ]);

    return result[0].toBoolean();
  }

  try_checkEOA(_userId: BigInt, _EOA: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("checkEOA", "checkEOA(uint32,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_userId),
      ethereum.Value.fromAddress(_EOA)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddProfileCall extends ethereum.Call {
  get inputs(): AddProfileCall__Inputs {
    return new AddProfileCall__Inputs(this);
  }

  get outputs(): AddProfileCall__Outputs {
    return new AddProfileCall__Outputs(this);
  }
}

export class AddProfileCall__Inputs {
  _call: AddProfileCall;

  constructor(call: AddProfileCall) {
    this._call = call;
  }

  get _waterType(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _userName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _summary(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class AddProfileCall__Outputs {
  _call: AddProfileCall;

  constructor(call: AddProfileCall) {
    this._call = call;
  }
}

export class AddEOACall extends ethereum.Call {
  get inputs(): AddEOACall__Inputs {
    return new AddEOACall__Inputs(this);
  }

  get outputs(): AddEOACall__Outputs {
    return new AddEOACall__Outputs(this);
  }
}

export class AddEOACall__Inputs {
  _call: AddEOACall;

  constructor(call: AddEOACall) {
    this._call = call;
  }

  get _userId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newEOA(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddEOACall__Outputs {
  _call: AddEOACall;

  constructor(call: AddEOACall) {
    this._call = call;
  }
}
